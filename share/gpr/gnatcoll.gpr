--  This project has been generated by GPRINSTALL Pro 22.0w (20210419) (x86_64-pc-linux-gnu)

with "xmlada_dom";
with "xmlada_input";
with "xmlada_unicode";
with "xmlada_sax";
with "xmlada_schema";
with "gpr";

library project GnatColl is
   type BUILD_KIND is ("static", "relocatable", "static-pic");
   BUILD : BUILD_KIND := external("GNATCOLL_CORE_BUILD", external("GNATCOLL_BUILD", external("LIBRARY_TYPE", "static")));

   for Languages use ("Ada", "C");

   case BUILD is
      when "static-pic" =>
         for Source_Dirs use ("../../include/gnatcoll/");
         for Library_Dir use "../../lib/gnatcoll.static-pic";
         for Library_Kind use "static-pic";
      when "relocatable" =>
         for Source_Dirs use ("../../include/gnatcoll/");
         for Library_Dir use "../../lib/gnatcoll.relocatable";
         for Library_Kind use "relocatable";
      when "static" =>
         for Source_Dirs use ("../../include/gnatcoll/");
         for Library_Dir use "../../lib/gnatcoll.static";
         for Library_Kind use "static";
   end case;

   for Library_Name use "gnatcoll";

   package Naming is
      for dot_replacement use "-";
      for casing use "lowercase";
      
      case BUILD is
         when "static-pic" =>
            for spec_suffix ("c") use ".h";
            for spec_suffix ("ada") use ".ads";
            for body_suffix ("c") use ".c";
            for body_suffix ("ada") use ".adb";
            for body ("gnatcoll.os.fs.open_pipe") use "gnatcoll-os-fs-open_pipe__linux.adb";
            for body ("gnatcoll.os.process_types") use "gnatcoll-os-process_types__unix.adb";
            for body ("gnatcoll.os.process.internal_spawn") use "gnatcoll-os-process-internal_spawn__unix.adb";
            for body ("gnatcoll.os.process.wait") use "gnatcoll-os-process-wait__unix.adb";
            for body ("gnatcoll.os.fs.is_console") use "gnatcoll-os-fs-is_console__unix.adb";
            for body ("gnatcoll.os.fs.set_close_on_exec") use "gnatcoll-os-fs-set_close_on_exec__unix.adb";
            for body ("gnatcoll.os.fs.open") use "gnatcoll-os-fs-open__unix.adb";
            for body ("gnatcoll.os.stat.stat") use "gnatcoll-os-stat-stat__unix.adb";
            for body ("gnatcoll.plugins") use "gnatcoll-plugins__unix.adb";
            for body ("gnatcoll.io.native.codec") use "gnatcoll-io-native-codec__unix.adb";
            for body ("gnatcoll.mmap.system") use "gnatcoll-mmap-system__unix.adb";
            for spec ("gnatcoll.os.libc_constants") use "gnatcoll-os-libc_constants__linux.ads";
            for spec ("gnatcoll.os.process_types") use "gnatcoll-os-process_types__unix.ads";
            for spec ("gnatcoll.mmap.system") use "gnatcoll-mmap-system__unix.ads";
            for spec ("gnatcoll.os.constants") use "gnatcoll-os-constants__unix.ads";
         when "relocatable" =>
            for spec_suffix ("c") use ".h";
            for spec_suffix ("ada") use ".ads";
            for body_suffix ("c") use ".c";
            for body_suffix ("ada") use ".adb";
            for body ("gnatcoll.os.fs.open_pipe") use "gnatcoll-os-fs-open_pipe__linux.adb";
            for body ("gnatcoll.os.process_types") use "gnatcoll-os-process_types__unix.adb";
            for body ("gnatcoll.os.process.internal_spawn") use "gnatcoll-os-process-internal_spawn__unix.adb";
            for body ("gnatcoll.os.process.wait") use "gnatcoll-os-process-wait__unix.adb";
            for body ("gnatcoll.os.fs.is_console") use "gnatcoll-os-fs-is_console__unix.adb";
            for body ("gnatcoll.os.fs.set_close_on_exec") use "gnatcoll-os-fs-set_close_on_exec__unix.adb";
            for body ("gnatcoll.os.fs.open") use "gnatcoll-os-fs-open__unix.adb";
            for body ("gnatcoll.os.stat.stat") use "gnatcoll-os-stat-stat__unix.adb";
            for body ("gnatcoll.plugins") use "gnatcoll-plugins__unix.adb";
            for body ("gnatcoll.io.native.codec") use "gnatcoll-io-native-codec__unix.adb";
            for body ("gnatcoll.mmap.system") use "gnatcoll-mmap-system__unix.adb";
            for spec ("gnatcoll.os.libc_constants") use "gnatcoll-os-libc_constants__linux.ads";
            for spec ("gnatcoll.os.process_types") use "gnatcoll-os-process_types__unix.ads";
            for spec ("gnatcoll.mmap.system") use "gnatcoll-mmap-system__unix.ads";
            for spec ("gnatcoll.os.constants") use "gnatcoll-os-constants__unix.ads";
         when "static" =>
            for spec_suffix ("c") use ".h";
            for spec_suffix ("ada") use ".ads";
            for body_suffix ("c") use ".c";
            for body_suffix ("ada") use ".adb";
            for body ("gnatcoll.os.fs.open_pipe") use "gnatcoll-os-fs-open_pipe__linux.adb";
            for body ("gnatcoll.os.process_types") use "gnatcoll-os-process_types__unix.adb";
            for body ("gnatcoll.os.process.internal_spawn") use "gnatcoll-os-process-internal_spawn__unix.adb";
            for body ("gnatcoll.os.process.wait") use "gnatcoll-os-process-wait__unix.adb";
            for body ("gnatcoll.os.fs.is_console") use "gnatcoll-os-fs-is_console__unix.adb";
            for body ("gnatcoll.os.fs.set_close_on_exec") use "gnatcoll-os-fs-set_close_on_exec__unix.adb";
            for body ("gnatcoll.os.fs.open") use "gnatcoll-os-fs-open__unix.adb";
            for body ("gnatcoll.os.stat.stat") use "gnatcoll-os-stat-stat__unix.adb";
            for body ("gnatcoll.plugins") use "gnatcoll-plugins__unix.adb";
            for body ("gnatcoll.io.native.codec") use "gnatcoll-io-native-codec__unix.adb";
            for body ("gnatcoll.mmap.system") use "gnatcoll-mmap-system__unix.adb";
            for spec ("gnatcoll.os.libc_constants") use "gnatcoll-os-libc_constants__linux.ads";
            for spec ("gnatcoll.os.process_types") use "gnatcoll-os-process_types__unix.ads";
            for spec ("gnatcoll.mmap.system") use "gnatcoll-mmap-system__unix.ads";
            for spec ("gnatcoll.os.constants") use "gnatcoll-os-constants__unix.ads";
      end case;
   end Naming;

   package Linker is
      case BUILD is
         when "static-pic" =>
            null;
         when "relocatable" =>
            null;
         when "static" =>
            null;
      end case;
   end Linker;

   package Install is
      for Active use "False";
   end Install;

   for Externally_Built use "True";

   type Yes_No is
     ("yes", "no");

   type Build_Type is
     ("DEBUG", "PROD");

   type Library_Type_Type is
     ("relocatable", "static", "static-pic");

   type Os_Kind is
     ("windows", "unix", "osx");

   so_ext         := ".so";
   extra_libs     := ();
   extra_switches := ("-DHAVE_MMAP", "-DHAVE_MADVISE");
   sources        := ("src", "src/os", "src/paragraph_filling", "src/os/unix");
   os             : os_kind := "unix";
   library_type   : library_type_type := "static";
   build          : build_type := "PROD";
   madvise        : yes_no := "yes";
   mmap           : yes_no := "yes";
   name           := "gnatcoll";
   version        := "2021";
end GnatColl;
